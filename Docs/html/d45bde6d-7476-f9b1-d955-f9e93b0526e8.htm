<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>ISortable Interface</title><meta name="Title" content="ISortable" /><meta name="Help.Id" content="T:Sorting.ISortable" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Sorting" /><meta name="guid" content="d45bde6d-7476-f9b1-d955-f9e93b0526e8" /><meta name="Description" content="The interface ISortable defines some requires to the classes, which contain methods to sort an array." /><meta name="tocFile" content="../toc/IDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>ISortable Interface</h1><div class="summary">
            The interface ISortable defines some requires
            to the classes, which contain methods to sort an array.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="e0a1629f-63a8-3d0e-0483-0c14e8cf822b.htm">Sorting</a><br /><strong>Assembly:</strong> Sorting (in Sorting.dll) Version: 1.0.0<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">ISortable</span></code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDBEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="9e675f5f-37b8-3d3a-6947-f1065e181ab5.htm">AverageCase</a></td><td>
            The algorithm complexity in the average case.<br />
            It defines the average case of an algorithm’s time complexity,
            the Theta notation defines when the set of functions lies in both O(expression)
            and Omega(expression), then Theta notation is used.<br />
            This is how we define a time complexity average case for an algorithm. 
            </td></tr><tr><td><a href="7357fbdd-1d24-d032-b65f-7d042210f5fc.htm">BestCase</a></td><td>
            The algorithm complexity in the best case.<br />
            The array may be already sorted, and
            the best case will be "Ω(1)".<br />
            It defines the best case of an algorithm’s time complexity,
            the Omega notation defines whether the set of functions will grow
            faster or at the same rate as the expression.<br />
            Furthermore, it explains the minimum amount of time an algorithm
            requires to consider all input values.
            </td></tr><tr><td><a href="f77445b1-9d8d-5c1d-b6fd-ab4a8bd6b04a.htm">Comparisons</a></td><td>
            The amount of compare operations.
            </td></tr><tr><td><a href="759821bf-d3dc-4b8f-cba2-b0c58678af55.htm">IsStabil</a></td><td>
            Is the sorting algorithm stabil or not?<br />
            Stable sorting algorithms maintain the relative order of records
            with equal keys.
            </td></tr><tr><td><a href="0942752f-1059-9019-e4ee-51747b27e1a8.htm">Name</a></td><td>
            The name of the algorithm.<br />The enumeration SortingAlgorithm contains
            some algorithm names. The name DefaultSort is used by default.
            </td></tr><tr><td><a href="323f2ac0-b34f-6917-1c09-3d543348a18f.htm">Swaps</a></td><td>
            The amount of the changing keys position operations.
            </td></tr><tr><td><a href="6a5033db-80b4-1792-ab18-0921d51c0954.htm">Time</a></td><td>
            The Stopwatch class instance.
            </td></tr><tr><td><a href="b930abde-b9f1-f20b-1306-ba74d27e8f93.htm">WorstCase</a></td><td>
            The algorithm complexity in the worst case.<br />
            It defines worst-case time complexity by using the Big-O notation,
            which determines the set of functions grows slower than or at the same rate as the expression.<br />
            Furthermore, it explains the maximum amount of time an algorithm requires to consider all input values.
            </td></tr><tr><td><a href="3c819fee-4b02-7239-3f39-d58717678d41.htm">WorstCaseSpaceComplexity</a></td><td>
            Memory usage (and use of other computer resources).<br />
            In particular, some sorting algorithms are "in-place".<br />
            Strictly, an in-place sort needs only O(1) memory beyond the items being sorted;
            sometimes O(log n) additional memory is considered "in-place".
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDAAEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="899bc9a0-39be-aa80-86ad-dec55d8254c9.htm">Sort(<span id="LSTFA5E5E88_0" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LSTFA5E5E88_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="aa22b595-b98e-fe17-ef86-37adeb52d662.htm">Sort(<span id="LSTFA5E5E88_2" data-languageSpecificText="cpp=array&lt;"></span>Char<span id="LSTFA5E5E88_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="f1aaa0f5-d640-8a85-9d06-eb1acfbd8b2b.htm">Sort(<span id="LSTFA5E5E88_4" data-languageSpecificText="cpp=array&lt;"></span>Decimal<span id="LSTFA5E5E88_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="b283d787-ad42-0b74-82d6-bd38e0a4741b.htm">Sort(<span id="LSTFA5E5E88_6" data-languageSpecificText="cpp=array&lt;"></span>Double<span id="LSTFA5E5E88_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="83731308-555c-560e-99a7-5f85700da9bf.htm">Sort(<span id="LSTFA5E5E88_8" data-languageSpecificText="cpp=array&lt;"></span>Int16<span id="LSTFA5E5E88_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="4c98caef-a2b5-f5bb-da2e-040bb98fa782.htm">Sort(<span id="LSTFA5E5E88_10" data-languageSpecificText="cpp=array&lt;"></span>Int32<span id="LSTFA5E5E88_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="8b977fb7-7078-26f3-0f2f-ff3ddc549016.htm">Sort(<span id="LSTFA5E5E88_12" data-languageSpecificText="cpp=array&lt;"></span>Int64<span id="LSTFA5E5E88_13" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="9e8ec1db-0c67-920d-9993-f1e294cedfca.htm">Sort(<span id="LSTFA5E5E88_14" data-languageSpecificText="cpp=array&lt;"></span>SByte<span id="LSTFA5E5E88_15" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="67d67b64-46f8-2e64-3b0a-eee8b05f70e4.htm">Sort(<span id="LSTFA5E5E88_16" data-languageSpecificText="cpp=array&lt;"></span>Single<span id="LSTFA5E5E88_17" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="b2318bfe-6e16-85a4-4ade-77abf2c07343.htm">Sort(<span id="LSTFA5E5E88_18" data-languageSpecificText="cpp=array&lt;"></span>UInt16<span id="LSTFA5E5E88_19" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="25aa4ace-7bd8-1994-2407-36e4272e93de.htm">Sort(<span id="LSTFA5E5E88_20" data-languageSpecificText="cpp=array&lt;"></span>UInt32<span id="LSTFA5E5E88_21" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr><tr><td><a href="115eb614-b4a4-49aa-40d8-1da841893735.htm">Sort(<span id="LSTFA5E5E88_22" data-languageSpecificText="cpp=array&lt;"></span>UInt64<span id="LSTFA5E5E88_23" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, SortingType)</a></td><td>
            The sorting algorithm method.<br />It creates a copy
            of the input array and works only with the new array.<br />
            The method returns a reference to the new sorted array.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="e0a1629f-63a8-3d0e-0483-0c14e8cf822b.htm">Sorting Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>