<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Algorithm&lt;T&gt;.Compare Method</title><meta name="Title" content="Compare" /><meta name="Help.Id" content="M:Sorting.Algorithm`1.Compare(`0,`0,Sorting.SortingType)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Sorting" /><meta name="guid" content="9efdbf85-089a-307e-98e9-79746b4b12ac" /><meta name="Description" content="The method is created to compare two generic variables." /><meta name="tocFile" content="../toc/IDCCA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">A Sandcastle Documented Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Algorithm<span id="LSTDD9E545_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LSTDD9E545_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LSTDD9E545_2" data-languageSpecificText="cpp=::|nu=."></span>Compare Method</h1><div class="summary">
            The method is created to compare two generic variables.<br /><span class="code">
            Compare(x, y);<br />
            if (x &gt; y) then it returns &gt; 0<br />
            if (x == y) then it returns 0<br />
            if (x &lt; y) then it returns &lt; 0
            </span></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="e0a1629f-63a8-3d0e-0483-0c14e8cf822b.htm">Sorting</a><br /><strong>Assembly:</strong> Sorting (in Sorting.dll) Version: 1.0.0<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">protected</span> <span class="identifier">int</span> <span class="identifier">Compare</span>(
	T <span class="parameter">x</span>,
	T <span class="parameter">y</span>,
	<span class="identifier">SortingType</span> <span class="parameter">sortingType</span> = <span class="identifier">SortingType</span>.Ascending
)</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">x</span>  <a href="a7e3968e-309e-b0b7-13e3-320de115b3ff.htm"><span class="typeparameter">T</span></a></dt><dd>The first value.</dd><dt class="has-text-weight-normal"><span class="parameter">y</span>  <a href="a7e3968e-309e-b0b7-13e3-320de115b3ff.htm"><span class="typeparameter">T</span></a></dt><dd>The second value.</dd><dt class="has-text-weight-normal"><span class="parameter">sortingType</span>  <a href="3570abf2-6002-61e4-0a9d-83b6f2db3c09.htm">SortingType</a>  (Optional)</dt><dd>The algorithm can sort ascending also descending.<br />
            If you need ascending sorting, you do not have to specify this parameter.<br />
            If you need descending sorting, you should specify this parameter with SortingType.Descending.<br />
            Warning: if you specify SortingType.Descending, the method will compare the second value with the first value.<br />
            So, in this case, the method will work oppositely.
            </dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a><br /><span class="code">
            Compare(x, y);<br />
            if (x &gt; y) then it returns &gt; 0<br />
            if (x == y) then it returns 0<br />
            if (x &lt; y) then it returns &lt; 0
            </span></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDFCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td>If x or y argument is null, the argument exception will be thrown.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="a7e3968e-309e-b0b7-13e3-320de115b3ff.htm">Algorithm<span id="LSTDD9E545_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTDD9E545_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span> Class</a></div><div><a href="e0a1629f-63a8-3d0e-0483-0c14e8cf822b.htm">Sorting Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>